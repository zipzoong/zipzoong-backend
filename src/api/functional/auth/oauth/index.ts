/**
 * @packageDocumentation
 * @module api.functional.auth.oauth
 * @nestia Generated by Nestia - https://github.com/samchon/nestia 
 */
//================================================================
import { Fetcher } from "@nestia/fetcher";
import type { IConnection } from "@nestia/fetcher";

/**
 * 카카오 로그인 페이지 리다이렉트 api
 * 
 * @summary redirect kakao oauth login page
 * 
 * @tag authentication
 * 
 * @controller AuthController.kakao()
 * @path GET /auth/oauth/kakao
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function kakao(
    connection: IConnection,
): Promise<void> {
    return !!connection.simulate
        ? kakao.simulate(
              connection,
          )
        : Fetcher.fetch(
              connection,
              kakao.ENCRYPTED,
              kakao.METHOD,
              kakao.path(),
          );
}
export namespace kakao {

    export const METHOD = "GET" as const;
    export const PATH: string = "/auth/oauth/kakao";
    export const ENCRYPTED: Fetcher.IEncrypted = {
        request: false,
        response: false,
        status: 302,
    };

    export const path = (): string => {
        return `/auth/oauth/kakao`;
    }
    export const simulate = async (
        _connection: IConnection,
    ): Promise<void> => {
    }
}